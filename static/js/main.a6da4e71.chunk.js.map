{"version":3,"sources":["Menu.js","MenuMobile.js","Field.js","Board.js","PassButton.js","gameMechanics.js","Game.js","Interface.js","App.js","serviceWorker.js","index.js"],"names":["Menu","props","className","onClick","handleChoice","MenuMobile","Field","state","possible","this","fieldType","setState","handleHover","extraClasses","handleClick","onMouseOver","getPossible","bind","React","Component","getFieldConnections","rowID","colID","boardSize","fieldConnections","up","right","down","left","Board","board","map","row","rowId","key","toString","element","colId","handleFieldHover","Passbutton","classNames","isActive","isWin","winner","content","color","score","player","sumTwoSquareBoolArrays","arr1","arr2","elem","opponent","getGroupSurroundings","checkedBoard","boardArray","currentColor","surroundings","newCheckedBoard","JSON","parse","stringify","checking","newIteration","push","Array","from","Set","getCapturedOnes","playerColor","emptyCheckBoard","fill","capturedBoard","isCapture","groupSurroundingsPack","groupSurroundings","localCheckedBoard","includes","isMovePossible","boardHistory","length","isNotSuicidal","newBoard","history","capturedObj","forEach","captRowId","captColId","some","histBoard","isKoValid","Game","passCounter","blackScore","whiteScore","stoneType","newPlayer","blackPoints","whitePoints","groupSurroundingPack","localSurroundings","groupPoints","r","c","white","black","countPoints","gameClasses","passMove","makeMove","Interface","interfaceType","size","mainComponent","queries","small","medium","large","matches","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6da4e71.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Menu.css\";\n\nfunction Menu(props) {\n  return (\n    <div className=\"Menu\">\n      <div className=\"Menu-GO Menu-G Menu-grid-elem\">\n        <h1 className=\"Menu-logo-text\">G</h1>\n      </div>\n\n      <div className=\"Menu-GO Menu-O Menu-grid-elem\">\n        <h1 className=\"Menu-logo-text\">O</h1>\n      </div>\n\n      <div className=\"Menu-label1 Menu-grid-elem\">Select Board</div>\n      <div className=\"Menu-label2 Menu-grid-elem\">Size</div>\n      <button\n        className=\"Menu-board-type Menu-btn-1 Menu-grid-elem\"\n        onClick={() => {\n          props.handleChoice(9);\n        }}\n      >\n        9\n      </button>\n      <button\n        className=\"Menu-board-type Menu-btn-2 Menu-grid-elem\"\n        onClick={() => {\n          props.handleChoice(13);\n        }}\n      >\n        13\n      </button>\n      <button\n        className=\"Menu-board-type Menu-btn-3 Menu-grid-elem\"\n        onClick={() => {\n          props.handleChoice(19);\n        }}\n      >\n        19\n      </button>\n    </div>\n  );\n}\n\nexport default Menu;\n","import React from \"react\";\nimport \"./MenuMobile.css\";\n\nfunction MenuMobile(props) {\n  return (\n    <div className=\"MenuMobile\">\n      <h1 className=\"GO-header\">GO</h1>\n      <div className=\"MenuMobile-board-types-box\">\n        <button\n          className=\"MenuMobile-board-type\"\n          onClick={() => {\n            props.handleChoice(9);\n          }}\n        >\n          9\n        </button>\n        <button\n          className=\"MenuMobile-board-type\"\n          onClick={() => {\n            props.handleChoice(9);\n          }}\n        >\n          13\n        </button>\n        <button\n          className=\"MenuMobile-board-type\"\n          onClick={() => {\n            props.handleChoice(9);\n          }}\n        >\n          19\n        </button>\n      </div>\n      <footer>© Bartłomiej Pogodziński 2019</footer>\n    </div>\n  );\n}\n\nexport default MenuMobile;\n","import React from \"react\";\nimport \"./Field.css\";\n\nclass Field extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      possible: false\n    };\n  }\n\n  getPossible() {\n    if (this.props.fieldType === \"none\")\n      this.setState({\n        possible: this.props.handleHover()\n      });\n  }\n\n  render() {\n    let extraClasses = \"\";\n    if (this.props.fieldType === \"black\")\n      extraClasses += \" Field-black Field-taken\";\n    else if (this.props.fieldType === \"white\")\n      extraClasses += \" Field-white Field-taken\";\n    else if (this.state.possible) extraClasses += \" Field-possible\";\n\n    return (\n      <div\n        className={\"Field\" + extraClasses}\n        onClick={this.props.handleClick}\n        onMouseOver={this.getPossible.bind(this)}\n      ></div>\n    );\n  }\n}\n\nexport default Field;\n","import React from \"react\";\nimport \"./Board.css\";\nimport Field from \"./Field\";\n\nfunction getFieldConnections(rowID, colID, boardSize) {\n  let fieldConnections = {\n    up: true,\n    right: true,\n    down: true,\n    left: true\n  };\n  if (rowID === 0) fieldConnections.up = false;\n  if (colID === boardSize - 1) fieldConnections.right = false;\n  if (rowID === boardSize - 1) fieldConnections.down = false;\n  if (colID === 0) fieldConnections.left = false;\n\n  return fieldConnections;\n}\n\nfunction Board(props) {\n  return (\n    <div className=\"Board\">\n      {props.board.map((row, rowId) => (\n        <div className=\"Board-row\" key={rowId.toString()}>\n          {\" \"}\n          {row.map((element, colId) => (\n            <Field\n              fieldType={element}\n              key={rowId.toString() + \" \" + colId.toString()}\n              fieldConnections={getFieldConnections(\n                rowId,\n                colId,\n                props.boardSize\n              )}\n              handleClick={() => props.handleClick(rowId, colId)}\n              handleHover={() => props.handleFieldHover(rowId, colId)}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Board;\n","import React from \"react\";\nimport \"./PassButton.css\";\n\nfunction Passbutton(props) {\n  let classNames = \"PassButton\";\n  let isActive = false;\n  let isWin = props.winner !== \"none\";\n  let content = \"pass\";\n\n  if (props.color === \"black\") classNames += \" PassButton-black\";\n  if (props.color === \"white\") classNames += \" PassButton-white\";\n  if (isWin) {\n    content = props.score;\n    classNames += \" PassButton-finished\";\n    if (props.winner === props.color) classNames += \" PassButton-winner\";\n    else classNames += \" PassButton-looser\";\n  } else {\n    if (props.color === props.player) {\n      classNames += \" PassButton-active\";\n      isActive = true;\n    }\n  }\n\n  return (\n    <button\n      className={classNames}\n      onClick={() => {\n        if (isActive) props.handleClick();\n      }}\n    >\n      <div className=\"PassButton-content\">{content}</div>\n    </button>\n  );\n}\n\nexport default Passbutton;\n","function sumTwoSquareBoolArrays(arr1, arr2) {\n  return arr1.map((row, rowId) =>\n    row.map((elem, colId) => elem || arr2[rowId][colId])\n  );\n}\n\nfunction opponent(player) {\n  if (player === \"none\") {\n    return \"none\";\n  }\n  return player === \"black\" ? \"white\" : \"black\";\n}\n\nfunction getGroupSurroundings(\n  rowId,\n  colId,\n  checkedBoard,\n  boardSize,\n  boardArray\n) {\n  const currentColor = boardArray[rowId][colId];\n  let surroundings = [];\n\n  let newCheckedBoard = JSON.parse(JSON.stringify(checkedBoard));\n  newCheckedBoard[rowId][colId] = true;\n\n  if (\n    rowId + 1 < boardSize &&\n    rowId + 1 >= 0 &&\n    newCheckedBoard[rowId + 1][colId] === false\n  ) {\n    const checking = boardArray[rowId + 1][colId];\n    if (checking === currentColor) {\n      const newIteration = getGroupSurroundings(\n        rowId + 1,\n        colId,\n        newCheckedBoard,\n        boardSize,\n        boardArray\n      );\n\n      newCheckedBoard = newIteration.checkedBoard;\n      surroundings.push(...newIteration.surroundings);\n    } else {\n      surroundings.push(checking);\n    }\n  }\n\n  if (\n    rowId - 1 < boardSize &&\n    rowId - 1 >= 0 &&\n    newCheckedBoard[rowId - 1][colId] === false\n  ) {\n    const checking = boardArray[rowId - 1][colId];\n    if (checking === currentColor) {\n      const newIteration = getGroupSurroundings(\n        rowId - 1,\n        colId,\n        newCheckedBoard,\n        boardSize,\n        boardArray\n      );\n\n      newCheckedBoard = newIteration.checkedBoard;\n      surroundings.push(...newIteration.surroundings);\n    } else {\n      surroundings.push(checking);\n    }\n  }\n\n  if (\n    colId + 1 < boardSize &&\n    colId + 1 >= 0 &&\n    newCheckedBoard[rowId][colId + 1] === false\n  ) {\n    const checking = boardArray[rowId][colId + 1];\n    if (checking === currentColor) {\n      const newIteration = getGroupSurroundings(\n        rowId,\n        colId + 1,\n        newCheckedBoard,\n        boardSize,\n        boardArray\n      );\n\n      newCheckedBoard = newIteration.checkedBoard;\n      surroundings.push(...newIteration.surroundings);\n    } else {\n      surroundings.push(checking);\n    }\n  }\n\n  if (\n    colId - 1 < boardSize &&\n    colId - 1 >= 0 &&\n    newCheckedBoard[rowId][colId - 1] === false\n  ) {\n    const checking = boardArray[rowId][colId - 1];\n    if (checking === currentColor) {\n      const newIteration = getGroupSurroundings(\n        rowId,\n        colId - 1,\n        newCheckedBoard,\n        boardSize,\n        boardArray\n      );\n\n      newCheckedBoard = newIteration.checkedBoard;\n      surroundings.push(...newIteration.surroundings);\n    } else {\n      surroundings.push(checking);\n    }\n  }\n  surroundings = Array.from(new Set(surroundings));\n\n  return {\n    surroundings,\n    checkedBoard: newCheckedBoard\n  };\n}\n\nfunction getCapturedOnes(rowId, colId, boardSize, boardArray, playerColor) {\n  const emptyCheckBoard = Array(boardSize).fill(Array(boardSize).fill(false));\n  let capturedBoard = Array(boardSize).fill(Array(boardSize).fill(false));\n\n  let isCapture = false;\n\n  const board = JSON.parse(JSON.stringify(boardArray));\n\n  board[rowId][colId] = playerColor;\n\n  // down\n  if (\n    rowId + 1 < boardSize &&\n    board[rowId + 1][colId] === opponent(playerColor)\n  ) {\n    const groupSurroundingsPack = getGroupSurroundings(\n      rowId + 1,\n      colId,\n      emptyCheckBoard,\n      boardSize,\n      board\n    );\n\n    const groupSurroundings = groupSurroundingsPack.surroundings;\n    const localCheckedBoard = groupSurroundingsPack.checkedBoard;\n\n    if (groupSurroundings.includes(\"none\") === false) {\n      isCapture = true;\n      capturedBoard = sumTwoSquareBoolArrays(capturedBoard, localCheckedBoard);\n    }\n  }\n\n  // up\n  if (rowId - 1 >= 0 && board[rowId - 1][colId] === opponent(playerColor)) {\n    const groupSurroundingsPack = getGroupSurroundings(\n      rowId - 1,\n      colId,\n      emptyCheckBoard,\n      boardSize,\n      board\n    );\n\n    const groupSurroundings = groupSurroundingsPack.surroundings;\n    const localCheckedBoard = groupSurroundingsPack.checkedBoard;\n\n    if (groupSurroundings.includes(\"none\") === false) {\n      isCapture = true;\n      capturedBoard = sumTwoSquareBoolArrays(capturedBoard, localCheckedBoard);\n    }\n  }\n\n  // right\n  if (\n    colId + 1 < boardSize &&\n    board[rowId][colId + 1] === opponent(playerColor)\n  ) {\n    const groupSurroundingsPack = getGroupSurroundings(\n      rowId,\n      colId + 1,\n      emptyCheckBoard,\n      boardSize,\n      board\n    );\n\n    const groupSurroundings = groupSurroundingsPack.surroundings;\n    const localCheckedBoard = groupSurroundingsPack.checkedBoard;\n\n    if (groupSurroundings.includes(\"none\") === false) {\n      isCapture = true;\n      capturedBoard = sumTwoSquareBoolArrays(capturedBoard, localCheckedBoard);\n    }\n  }\n\n  // left\n  if (colId - 1 >= 0 && board[rowId][colId - 1] === opponent(playerColor)) {\n    const groupSurroundingsPack = getGroupSurroundings(\n      rowId,\n      colId - 1,\n      emptyCheckBoard,\n      boardSize,\n      board\n    );\n\n    const groupSurroundings = groupSurroundingsPack.surroundings;\n    const localCheckedBoard = groupSurroundingsPack.checkedBoard;\n\n    if (groupSurroundings.includes(\"none\") === false) {\n      isCapture = true;\n      capturedBoard = sumTwoSquareBoolArrays(capturedBoard, localCheckedBoard);\n    }\n  }\n\n  return {\n    isCapture,\n    capturedBoard\n  };\n}\n\nfunction isKoValid(rowId, colId, boardArray, boardHistory, playerColor) {\n  const boardSize = boardArray.length;\n  const newBoard = JSON.parse(JSON.stringify(boardArray));\n  const history = JSON.parse(JSON.stringify(boardHistory));\n\n  newBoard[rowId][colId] = playerColor;\n\n  const capturedObj = getCapturedOnes(\n    rowId,\n    colId,\n    boardSize,\n    newBoard,\n    playerColor\n  );\n\n  if (capturedObj.isCapture) {\n    capturedObj.capturedBoard.forEach((row, captRowId) =>\n      row.forEach((elem, captColId) => {\n        if (elem) {\n          newBoard[captRowId][captColId] = \"none\";\n        }\n      })\n    );\n\n    return !history.some(\n      histBoard => JSON.stringify(histBoard) === JSON.stringify(newBoard)\n    );\n  }\n\n  return true;\n}\n\nfunction isNotSuicidal(rowId, colId, boardArray, playerColor) {\n  const boardSize = boardArray.length;\n  const board = JSON.parse(JSON.stringify(boardArray));\n\n  board[rowId][colId] = playerColor;\n\n  const emptyCheckBoard = Array(boardSize).fill(Array(boardSize).fill(false));\n  const moveGroupSurroundings = getGroupSurroundings(\n    rowId,\n    colId,\n    emptyCheckBoard,\n    boardSize,\n    board\n  ).surroundings;\n\n  if (moveGroupSurroundings.includes(\"none\") === false) {\n    // down\n    if (\n      rowId + 1 < boardSize &&\n      board[rowId + 1][colId] === opponent(playerColor)\n    ) {\n      const groupSurroundingsPack = getGroupSurroundings(\n        rowId + 1,\n        colId,\n        emptyCheckBoard,\n        boardSize,\n        board\n      );\n\n      const groupSurroundings = groupSurroundingsPack.surroundings;\n\n      if (groupSurroundings.includes(\"none\") === false) {\n        return true;\n      }\n    }\n\n    // up\n    if (rowId - 1 >= 0 && board[rowId - 1][colId] === opponent(playerColor)) {\n      const groupSurroundingsPack = getGroupSurroundings(\n        rowId - 1,\n        colId,\n        emptyCheckBoard,\n        boardSize,\n        board\n      );\n\n      const groupSurroundings = groupSurroundingsPack.surroundings;\n\n      if (groupSurroundings.includes(\"none\") === false) {\n        return true;\n      }\n    }\n\n    // right\n    if (\n      colId + 1 < boardSize &&\n      board[rowId][colId + 1] === opponent(playerColor)\n    ) {\n      const groupSurroundingsPack = getGroupSurroundings(\n        rowId,\n        colId + 1,\n        emptyCheckBoard,\n        boardSize,\n        board\n      );\n\n      const groupSurroundings = groupSurroundingsPack.surroundings;\n\n      if (groupSurroundings.includes(\"none\") === false) {\n        return true;\n      }\n    }\n\n    // left\n    if (colId - 1 >= 0 && board[rowId][colId - 1] === opponent(playerColor)) {\n      const groupSurroundingsPack = getGroupSurroundings(\n        rowId,\n        colId - 1,\n        emptyCheckBoard,\n        boardSize,\n        board\n      );\n\n      const groupSurroundings = groupSurroundingsPack.surroundings;\n\n      if (groupSurroundings.includes(\"none\") === false) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  return true;\n}\n\nfunction isMovePossible(rowId, colId, boardArray, boardHistory, playerColor) {\n  return (\n    isNotSuicidal(rowId, colId, boardArray, playerColor) &&\n    isKoValid(rowId, colId, boardArray, boardHistory, playerColor)\n  );\n}\n\nfunction countPoints(boardArray) {\n  let handicap = 7.5;\n  const board = JSON.parse(JSON.stringify(boardArray));\n\n  const boardSize = board.length;\n  let blackPoints = 0;\n  let whitePoints = 0;\n\n  let checkedBoard = Array(boardSize).fill(Array(boardSize).fill(false));\n  const emptyCheckBoard = Array(boardSize).fill(Array(boardSize).fill(false));\n\n  board.forEach((row, rowId) =>\n    row.forEach((elem, colId) => {\n      if (elem === \"black\") {\n        blackPoints += 1;\n      }\n      if (elem === \"white\") {\n        whitePoints += 1;\n      } else if (checkedBoard[rowId][colId] === false) {\n        const groupSurroundingPack = getGroupSurroundings(\n          rowId,\n          colId,\n          emptyCheckBoard,\n          boardSize,\n          board\n        );\n\n        const localSurroundings = groupSurroundingPack.surroundings;\n        const localCheckedBoard = groupSurroundingPack.checkedBoard;\n\n        checkedBoard = sumTwoSquareBoolArrays(checkedBoard, localCheckedBoard);\n\n        if (localSurroundings.length === 1) {\n          let groupPoints = 0;\n          for (let r = 0; r < boardSize; r += 1) {\n            for (let c = 0; c < boardSize; c += 1) {\n              groupPoints += localCheckedBoard[r][c] ? 1 : 0;\n            }\n          }\n\n          if (localSurroundings.includes(\"black\")) {\n            blackPoints += groupPoints;\n          } else if (localSurroundings.includes(\"white\")) {\n            whitePoints += groupPoints;\n          }\n        }\n      }\n    })\n  );\n\n  return {\n    white: whitePoints + handicap,\n    black: blackPoints\n  };\n}\n\nexport {\n  sumTwoSquareBoolArrays,\n  getGroupSurroundings,\n  opponent,\n  isMovePossible,\n  getCapturedOnes,\n  countPoints\n};\n","import React from \"react\";\nimport Board from \"./Board\";\nimport PassButton from \"./PassButton\";\nimport \"./Game.css\";\n\nimport {\n  isMovePossible,\n  getCapturedOnes,\n  countPoints,\n  opponent\n} from \"./gameMechanics\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      player: \"black\",\n      boardSize: this.props.boardSize,\n      board: Array(this.props.boardSize).fill(\n        Array(this.props.boardSize).fill(\"none\")\n      ),\n      boardHistory: [],\n      passCounter: 0,\n      isWin: false,\n      winner: \"none\",\n      blackScore: 0,\n      whiteScore: 0\n    };\n  }\n\n  makeMove(rowId, colId) {\n    if (this.state.isWin === false) {\n      if (\n        this.state.board[rowId][colId] === \"none\" &&\n        isMovePossible(\n          rowId,\n          colId,\n          this.state.board,\n          this.state.boardHistory,\n          this.state.player\n        )\n      ) {\n        let stoneType = this.state.player;\n        let newBoard = JSON.parse(JSON.stringify(this.state.board));\n        newBoard[rowId][colId] = stoneType;\n\n        let capturedObj = getCapturedOnes(\n          rowId,\n          colId,\n          newBoard.length,\n          newBoard,\n          stoneType\n        );\n\n        if (capturedObj.isCapture)\n          newBoard = newBoard.map((row, rowId) =>\n            row.map((elem, colId) =>\n              capturedObj.capturedBoard[rowId][colId] ? \"none\" : elem\n            )\n          );\n\n        let newPlayer = \"none\";\n        if (this.state.player === \"white\") newPlayer = \"black\";\n        if (this.state.player === \"black\") newPlayer = \"white\";\n\n        this.setState({\n          boardHistory: [...this.state.boardHistory, this.state.board],\n          board: newBoard,\n          player: newPlayer,\n          passCounter: 0\n        });\n      }\n    }\n  }\n\n  passMove() {\n    if (this.state.isWin === false) {\n      let isWin = this.state.passCounter >= 1;\n      this.setState({\n        boardHistory: [...this.state.boardHistory, this.state.board],\n        player: isWin ? \"none\" : opponent(this.state.player),\n        passCounter: this.state.passCounter + 1,\n        isWin: isWin\n      });\n      if (isWin) {\n        let score = countPoints(this.state.board);\n        let winner = score.black - score.white > 0 ? \"black\" : \"white\";\n        this.setState({\n          winner: winner,\n          whiteScore: score.white,\n          blackScore: score.black\n        });\n      }\n    }\n  }\n\n  render() {\n    let gameClasses = \"Game\";\n    if (this.state.isWin === true)\n      gameClasses += \" Game-\" + this.state.winner + \"-won\";\n\n    return (\n      <div className={gameClasses}>\n        <div className=\"Game-pass Game-pass-black\">\n          <PassButton\n            handleClick={this.passMove.bind(this)}\n            player={this.state.player}\n            color=\"black\"\n            winner={this.state.winner}\n            score={this.state.blackScore}\n          />\n        </div>\n        <div className=\"Game-pass Game-pass-white\">\n          <PassButton\n            handleClick={this.passMove.bind(this)}\n            player={this.state.player}\n            color=\"white\"\n            winner={this.state.winner}\n            score={this.state.whiteScore}\n          />\n        </div>\n\n        <div\n          className={\"Game-board\" + (this.state.isWin ? \" Game-board-win\" : \"\")}\n        >\n          <Board\n            board={this.state.board}\n            boardSize={this.state.boardSize}\n            handleClick={this.makeMove.bind(this)}\n            handleFieldHover={(rowId, colId) => {\n              return isMovePossible(\n                rowId,\n                colId,\n                this.state.board,\n                this.state.boardHistory,\n                this.state.player\n              );\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Fragment } from \"react\";\nimport Menu from \"./Menu\";\nimport MenuMobile from \"./MenuMobile\";\nimport Game from \"./Game\";\nimport Media from \"react-media\";\nimport \"./interface.css\";\n\nclass Interface extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      interfaceType: \"menu\",\n      boardSize: 9\n    };\n  }\n\n  handleChoice(size) {\n    this.setState({\n      boardSize: size,\n      interfaceType: \"game\"\n    });\n  }\n\n  render() {\n    // let mainComponent = <Menu handleChoice={this.handleChoice.bind(this)} />;\n    let mainComponent = (\n      <Media\n        queries={{\n          small: \"(max-width: 599px)\",\n          medium: \"(min-width: 600px) and (max-width: 1299px)\",\n          large: \"(min-width: 1300px)\"\n        }}\n      >\n        {matches => (\n          <Fragment>\n            {matches.small && (\n              <MenuMobile handleChoice={this.handleChoice.bind(this)} />\n            )}\n            {matches.medium && (\n              <MenuMobile handleChoice={this.handleChoice.bind(this)} />\n            )}\n            {matches.large && (\n              <Menu handleChoice={this.handleChoice.bind(this)} />\n            )}\n          </Fragment>\n        )}\n      </Media>\n    );\n\n    if (this.state.interfaceType === \"game\")\n      mainComponent = <Game boardSize={this.state.boardSize} />;\n\n    // if(this.state.interfaceType === \"about\")\n    //     mainComponent = <About/>;\n\n    return <div className=\"Interface\">{mainComponent}</div>;\n  }\n}\n\nexport default Interface;\n","import React from \"react\";\nimport Interface from \"./Interface\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Interface />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}